plugins {
  id 'java'
  id 'eclipse'
  id 'application'
}

/* http://ryanharter.com/blog/2013/07/30/automatic-versioning-with-git-and-gradle/
 * 
 * Gets the version name from the latest Git tag
 */

def getVersionName = { ->
  def stdout = new ByteArrayOutputStream ()
  exec {
    commandLine 'git', 'describe', '--tags'
    standardOutput = stdout
  }
  return stdout.toString ().trim ()
}

version = getVersionName ()

jar {
  manifest {
    attributes 'Implementation-Title': 'Utilities',
            'Implementation-Version': version
  }
}
mainClassName = 'Main'

sourceSets {
  main {
    resources {
      exclude '**/workbench.xmi'
    }
  }
}

/*
 * Bugfix - We need to do this because
 * org.gradle.api.internal.file.DefaultSourceDirectorySet.getSrcDirTrees is broken
 * and doesn't respect include or exclude patterns.
 */
sourceSets.main.allSource.getFilter ().exclude ('**/workbench.xmi')

run {
  standardInput = System.in
}

task sourceJar (type: Jar, dependsOn: classes) {
  classifier = 'source'
  from sourceSets.main.allSource
}

task javadocJar (type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

artifacts {
  archives sourceJar
  archives javadocJar
}

def home = System.properties ['user.home']
repositories {
  flatDir {
    name 'fileRepo'
    dirs new File (home, 'repo')
  }
}

uploadArchives {
  repositories {
    add project.repositories.fileRepo
  }
}
